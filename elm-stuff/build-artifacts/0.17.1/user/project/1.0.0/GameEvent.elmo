var _user$project$GameEvent_ops = _user$project$GameEvent_ops || {};
_user$project$GameEvent_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _user$project$GameEvent$noDisplay = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			A2(_user$project$GameEvent_ops['=>'], 'display', 'none')
		]));
var _user$project$GameEvent$containerStyle = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			A2(_user$project$GameEvent_ops['=>'], 'padding', '5% 0.3em 5% 0em'),
			A2(_user$project$GameEvent_ops['=>'], 'width', '100%'),
			A2(_user$project$GameEvent_ops['=>'], 'display', '-ms-flexbox'),
			A2(_user$project$GameEvent_ops['=>'], '-ms-flex-direction', 'row'),
			A2(_user$project$GameEvent_ops['=>'], '-ms-flex-pack', 'center'),
			A2(_user$project$GameEvent_ops['=>'], '-ms-justify-content', 'center'),
			A2(_user$project$GameEvent_ops['=>'], 'display', 'flex'),
			A2(_user$project$GameEvent_ops['=>'], 'flex-direction', 'row'),
			A2(_user$project$GameEvent_ops['=>'], 'align-items', 'center'),
			A2(_user$project$GameEvent_ops['=>'], 'justify-content', 'center')
		]));
var _user$project$GameEvent$imageStyle = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			A2(_user$project$GameEvent_ops['=>'], 'margin', '0% 0% 0% 0%'),
			A2(_user$project$GameEvent_ops['=>'], 'padding', '0px 40px 0 0')
		]));
var _user$project$GameEvent$paragraphStyle = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			A2(_user$project$GameEvent_ops['=>'], 'padding', '0% 10% 0% 10%'),
			A2(_user$project$GameEvent_ops['=>'], 'display', 'block'),
			A2(_user$project$GameEvent_ops['=>'], 'font-size', '0.9em'),
			A2(_user$project$GameEvent_ops['=>'], 'font-weight', 'bold'),
			A2(_user$project$GameEvent_ops['=>'], 'font-family', 'Helvetica, Arial, sans-serif'),
			A2(_user$project$GameEvent_ops['=>'], 'text-align', 'center')
		]));
var _user$project$GameEvent$imageAndButtonContainer = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			A2(_user$project$GameEvent_ops['=>'], 'text-align', 'justify'),
			A2(_user$project$GameEvent_ops['=>'], 'text-justify', 'distribute-all-lines'),
			A2(_user$project$GameEvent_ops['=>'], 'display', 'flex'),
			A2(_user$project$GameEvent_ops['=>'], 'justify-content', 'center')
		]));
var _user$project$GameEvent$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'UpdateButton') {
			var button$ = A2(_user$project$LabeledButton$update, _p0._0, model.button);
			return _elm_lang$core$Native_Utils.update(
				model,
				{button: button$});
		} else {
			return model;
		}
	});
var _user$project$GameEvent$noFx = function (model) {
	return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
};
var _user$project$GameEvent$init = F3(
	function (buttonLabel$, description$, eventType$) {
		return {
			button: A3(_user$project$LabeledButton$init, buttonLabel$, 30, 50),
			description: description$,
			eventType: eventType$
		};
	});
var _user$project$GameEvent$Model = F3(
	function (a, b, c) {
		return {description: a, button: b, eventType: c};
	});
var _user$project$GameEvent$Any = {ctor: 'Any'};
var _user$project$GameEvent$NextPage = {ctor: 'NextPage'};
var _user$project$GameEvent$Question = {ctor: 'Question'};
var _user$project$GameEvent$TakeMsg = {ctor: 'TakeMsg'};
var _user$project$GameEvent$GameOver = {ctor: 'GameOver'};
var _user$project$GameEvent$NoOp = {ctor: 'NoOp'};
var _user$project$GameEvent$UpdateButton = function (a) {
	return {ctor: 'UpdateButton', _0: a};
};
var _user$project$GameEvent$view = function (model) {
	var eventText = function () {
		var _p1 = model.description;
		if (_p1 === '') {
			return A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[_user$project$GameEvent$noDisplay]),
				_elm_lang$core$Native_List.fromArray(
					[]));
		} else {
			return A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[_user$project$GameEvent$paragraphStyle]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(model.description)
					]));
		}
	}();
	var eventImageSource = function () {
		var _p2 = model.eventType;
		switch (_p2.ctor) {
			case 'GameOver':
				return A2(_elm_lang$core$Basics_ops['++'], _user$project$Defaults$imagesLocation, 'skull.png');
			case 'TakeMsg':
				return A2(_elm_lang$core$Basics_ops['++'], _user$project$Defaults$imagesLocation, 'exclamationMark.png');
			case 'Question':
				return A2(_elm_lang$core$Basics_ops['++'], _user$project$Defaults$imagesLocation, 'questionMark.png');
			case 'NextPage':
				return A2(_elm_lang$core$Basics_ops['++'], _user$project$Defaults$imagesLocation, 'nextIcon.png');
			default:
				return '';
		}
	}();
	var image = function () {
		var _p3 = model.eventType;
		if (_p3.ctor === 'Any') {
			return A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[_user$project$GameEvent$noDisplay]),
				_elm_lang$core$Native_List.fromArray(
					[]));
		} else {
			return A2(
				_elm_lang$html$Html$img,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$src(eventImageSource),
						_user$project$GameEvent$imageStyle
					]),
				_elm_lang$core$Native_List.fromArray(
					[]));
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				eventText,
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$GameEvent$containerStyle,
						_elm_lang$html$Html_Attributes$class('gameEventBox')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						image,
						A2(
						_elm_lang$html$Html_App$map,
						_user$project$GameEvent$UpdateButton,
						_user$project$LabeledButton$view(model.button))
					]))
			]));
};
